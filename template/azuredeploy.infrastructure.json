{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkAddressPrefixes": {
      "defaultValue": "10.0.0.0/8",
      "type": "string",
      "metadata": {
        "description": "Specifies the address prefixes of the virtual network."
      }
    },
    "virtualNetworkName": {
      "defaultValue": "[concat(parameters('aksClusterName'), '-vnet')]",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the virtual network."
      }
    },
    "aksSubnetAddressPrefix": {
      "defaultValue": "10.0.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Specifies the address prefix of the subnet hosting the system node pool of the AKS cluster."
      }
    },
    "aksSubnetName": {
      "defaultValue": "k8s-subnet",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the subnet hosting the system node pool of the AKS cluster."
      }
    },
    "applicationGatewaySubnetAddressPrefix": {
      "defaultValue": "10.1.0.0/20",
      "type": "string",
      "metadata": {
        "description": "Specifies the address prefix of the subnet which contains the Application Gateway."
      }
    },
    "applicationGatewaySubnetName": {
      "defaultValue": "appgateway-subnet",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the subnet which contains the the Application Gateway."
      }
    },
    "virtualMachineSubnetAddressPrefix": {
      "defaultValue": "10.1.16.0/20",
      "type": "string",
      "metadata": {
        "description": "Specifies the address prefix of the subnet which contains the virtual machine."
      }
    },
    "virtualMachineSubnetName": {
      "defaultValue": "vm-subnet",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the subnet which contains the virtual machine."
      }
    },
    "netAppFileSubnetAddressPrefix": {
      "defaultValue": "10.2.0.0/20",
      "type": "string",
      "metadata": {
        "description": "Specifies the address prefix of the subnet which contains the NetApp File System"
      }
    },
    "netAppFileSubnetName": {
      "defaultValue": "netapp-subnet",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the subnet which contains the the Application Gateway."
      }
    },
    "netAppServiceLevel": {
      "defaultValue": "Standard",
      "type": "string",
      "allowedValues": [
        "Premium",
        "Ultra",
        "Standard"
      ],
      "metadata": {
        "description": "Target performance for the capacity pool. Service level: Ultra, Premium, or Standard."
      }
    },
    "aksClusterName": {
      "defaultValue": "[concat('boomi-aks-', uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the AKS cluster."
      }
    },
    "aksClusterKubernetesVersion": {
      "defaultValue": "1.19.7",
      "type": "string",
      "metadata": {
        "description": "Specifies the version of Kubernetes specified when creating the managed cluster."
      }
    },
    "aksClusterAvailabilityZones": {
      "defaultValue": [],
      "type": "array",
      "metadata": {
        "description": "Specifies the availability zones for the agent nodes in the system/user node pool. Requirese the use of VirtualMachineScaleSets as node pool type."
      }
    },
    "aksClusterEnablePrivateCluster": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Specifies whether to create the cluster as a private cluster or not."
      }
    },
    "aksClusterSkuTier": {
      "defaultValue": "Paid",
      "type": "string",
      "allowedValues": [
        "Paid",
        "Free"
      ],
      "metadata": {
        "description": "Specifies the tier of a managed cluster SKU: Paid or Free"
      }
    },
    "aksClusterDnsPrefix": {
      "defaultValue": "aks",
      "type": "string",
      "metadata": {
        "description": "Specifies the DNS prefix specified when creating the managed cluster."
      }
    },
    "aksSystemNodePoolAgentCount": {
      "defaultValue": 1,
      "type": "int",
      "metadata": {
        "description": "Specifies the number of agents (VMs) to host docker containers in the system node pool. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
      }
    },
    "aksUserNodePoolAgentCount": {
      "defaultValue": 3,
      "type": "int",
      "metadata": {
        "description": "Specifies the number of agents (VMs) to host docker containers in the user node pool. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
      }
    },
    "aksNodePoolVmSize": {
      "defaultValue": "Standard_D3_v2",
      "type": "string",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "aksClusterPodCidr": {
      "defaultValue": "10.244.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Specifies the CIDR notation IP range from which to assign pod IPs when kubenet is used."
      }
    },
    "aksClusterServiceCidr": {
      "defaultValue": "10.3.0.0/16",
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
      }
    },
    "aksClusterDnsServiceIP": {
      "defaultValue": "10.3.0.10",
      "type": "string",
      "metadata": {
        "description": "Specifies the IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
      }
    },
    "aksClusterDockerBridgeCidr": {
      "defaultValue": "172.17.0.1/16",
      "type": "string",
      "metadata": {
        "description": "Specifies the CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
      }
    },
    "virtualMachineName": {
      "defaultValue": "[concat('boomi-vm-', uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the virtual machine."
      }
    },
    "virtualMachineSize": {
      "defaultValue": "Standard_DS1_v2",
      "type": "string",
      "metadata": {
        "description": "Virtual machine size (has to be at least the size of Standard_A3 to support 2 NICs)"
      }
    },
    "virtualMachineAdminUsername": {
      "defaultValue": "boomi",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the administrator account of the virtual machine."
      }
    },
    "virtualMachineAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the password for the virtual machine."
      }
    },
    "BoomiAuthenticationType": {
      "defaultValue": "token",
      "allowedValues": [
        "token",
        "password"
      ],
      "type": "string",
      "metadata": {
        "description": "Boomi Platform Authentication Type"
      }
    },
    "MoleculeAccountID": {
      "type": "string",
      "metadata": {
        "description": "The Boomi account ID that you want to associate with the new Molecule cluster."
      }
    },
    "MoleculeUsername": {
      "type": "string",
      "metadata": {
        "description": "The email account associated with the Boomi account."
      }
    },
    "BoomiMFAInstallToken": {
      "defaultValue": "",
      "type": "securestring",
      "metadata": {
        "description": "An MFA API token generated by your Dell Boomi Administrator."
      }
    },
    "MoleculePassword": {
      "defaultValue": "",
      "type": "securestring",
      "metadata": {
        "description": "The password associated with the Boomi account."
      }
    }
  },
  "variables": {
    "contributorRoleDefinitionName": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "contributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleDefinitionName'))]",

    "aksClusterUserDefinedManagedIdentityName": "[concat(parameters('aksClusterName'), 'UserManagedIdentity')]",
    "aksClusterUserDefinedManagedIdentityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('aksClusterUserDefinedManagedIdentityName'))]",
    "aksContributorRoleAssignmentName": "[guid(concat(resourceGroup().id, variables('aksClusterUserDefinedManagedIdentityName'), parameters('aksClusterName')))]",
    "aksContributorRoleAssignmentId": "[resourceId('Microsoft.Authorization/roleAssignments', variables('aksContributorRoleAssignmentName'))]",

    "virtualMachineUserDefinedManagedIdentityName": "[concat(parameters('virtualMachineName'), '-userManagedIdentity')]",
    "virtualMachineUserDefinedManagedIdentityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('virtualMachineUserDefinedManagedIdentityName'))]",
    "virtualMachineContributorRoleAssignmentName": "[guid(concat(resourceGroup().id, variables('virtualMachineUserDefinedManagedIdentityName'), parameters('virtualMachineName')))]",
    "virtualMachineContributorRoleAssignmentId": "[resourceId('Microsoft.Authorization/roleAssignments', variables('virtualMachineContributorRoleAssignmentName'))]",
    "virtualMachineNicName": "[concat(parameters('virtualMachineName'), 'Nic')]",
    "virtualMachineNicId": "[resourceId('Microsoft.Network/networkInterfaces', variables('virtualMachineNicName'))]",
    "virtualMachineId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",

    "virtualNetworkId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "aksSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('aksSubnetName'))]",
    "virtualMachineSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('virtualMachineSubnetName'))]",
    "applicationGatewaySubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('applicationGatewaySubnetName'))]",
    "netAppFileSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'), parameters('netAppFileSubnetName'))]",

    "virtualMachineSubnetNsgName": "[concat(parameters('virtualMachineSubnetName'), 'Nsg')]",
    "virtualMachineSubnetNsgId": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('virtualMachineSubnetNsgName'))]",


    "virtualMachinePublicIpAddressName": "[concat(parameters('virtualMachineName'),'PublicIp')]",
    "virtualMachinePublicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('virtualMachinePublicIpAddressName'))]",

    "aksClusterId": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName'))]",
    "netAppFileDelegationsName": "[concat(parameters('aksClusterName'), '-netAppDelegation')]",
    "netAppAccountName": "[concat(tolower(parameters('aksClusterName')), uniqueString(resourceGroup().id))]",
    "netAppAccountId": "[resourceId('Microsoft.NetApp/netAppAccounts/', variables('netAppAccountName'))]",
    "netAppPoolName": "[concat(tolower(parameters('aksClusterName')), 'pool', uniqueString(resourceGroup().id))]",
    "capacityPoolName": "[concat(variables('netAppAccountName'), '/',variables('netAppPoolName'))]",
    "capacityPoolId": "[resourceId('Microsoft.NetApp/netAppAccounts/capacityPools', variables('netAppAccountName'), variables('netAppPoolName'))]",
    "netAppVolumeName": "[concat('volume', uniqueString(resourceGroup().id))]",
    "volumeName": "[concat(variables('netAppAccountName'), '/',variables('netAppPoolName'),'/', variables('netAppVolumeName'))]",
    "netAppVolumeId": "[resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes', variables('netAppAccountName'), variables('netAppPoolName'), variables('netAppVolumeName'))]"
  },
  "resources": [
    {
      "comments": "User-Defined Managed Identity used by the Azure Virtual Machine is assigned. Used to access Azure Cluster & NetApp Files",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('virtualMachineUserDefinedManagedIdentityName')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
    },
    {
      "comments": "Grant the Azure Virtual Machine User managed identity with contributor role permissions",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('virtualMachineContributorRoleAssignmentName')]",
      "dependsOn": [
        "[variables('virtualMachineUserDefinedManagedIdentityId')]",
        "[variables('virtualNetworkId')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleId')]",
        "description": "Assign the cluster user-defined managed identity contributor role on the resource group.",
        "principalId": "[reference(variables('virtualMachineUserDefinedManagedIdentityName')).principalId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('virtualMachinePublicIpAddressName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 30
      }
    },
    {
      "apiVersion": "2020-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('virtualMachineNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('virtualNetworkId')]",
        "[variables('virtualMachinePublicIpAddressId')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[ concat(parameters('virtualMachineName'), '-ipconfig1') ]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('virtualMachineSubnetId')]"
              },
              "publicIpAddress": {
                "id": "[variables('virtualMachinePublicIpAddressId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachineName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[variables('virtualMachineUserDefinedManagedIdentityId')]": {}
        }
      },
      "dependsOn": [
        "[variables('aksClusterId')]",
        "[variables('virtualMachineNicId')]",
        "[variables('virtualMachineContributorRoleAssignmentId')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('virtualMachineAdminUsername')]",
          "adminPassword": "[parameters('virtualMachineAdminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "8_2",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('virtualMachineName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": 30,
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('virtualMachineNicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),'/molecule-deployments')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('netAppVolumeId')]",
        "[variables('virtualMachineId')]",
        "[variables('virtualMachineContributorRoleAssignmentId')]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/vilvamani/quickstart-aks-boomi-molecule/main/scripts/k8s_deployment.sh"
          ],
          "commandToExecute": "[concat('./k8s_deployment.sh', ' --resource_group \"', resourceGroup().name, '\" --aks_name \"', parameters('aksClusterName'), '\" --boomi_auth \"', parameters('BoomiAuthenticationType'), '\" --boomi_token \"', parameters('BoomiMFAInstallToken'), '\" --boomi_username \"', parameters('MoleculeUsername'), '\" --boomi_password \"', parameters('MoleculePassword'), '\" --boomi_account \"', parameters('MoleculeAccountID'), '\" --fileshare \"', variables('netAppVolumeName'), '\" --netAppIP \"', reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes/', variables('netAppAccountName'), variables('netAppPoolName'), variables('netAppVolumeName'))).mountTargets[0].ipAddress, '\"')]"
        }
      }
    },
    {
      "apiVersion": "2020-07-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('virtualmachineSubnetNsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowSshInbound",
            "properties": {
              "priority": 100,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "AllowHttpInbound",
            "properties": {
              "priority": 101,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "80",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "AllowhttpsInbound",
            "properties": {
              "priority": 102,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "443",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "AllowHttpOutbound",
            "properties": {
              "priority": 103,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "80",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "AllowhttpsOutbound",
            "properties": {
              "priority": 104,
              "access": "Allow",
              "direction": "Outbound",
              "destinationPortRange": "443",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-07-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('virtualMachineSubnetNsgId')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressPrefixes')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": []
        },
        "subnets": [
          {
            "name": "[parameters('aksSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('aksSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[parameters('applicationGatewaySubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('applicationGatewaySubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[parameters('virtualMachineSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('virtualMachineSubnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('virtualMachineSubnetNsgId')]"
              },
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[parameters('netAppFileSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('netAppFileSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "delegations": [
                {
                  "name": "[variables('netAppFileDelegationsName')]",
                  "properties": {
                    "serviceName": "Microsoft.NetApp/volumes"
                  }
                }
              ]
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.NetApp/netAppAccounts",
      "name": "[variables('netAppAccountName')]",
      "apiVersion": "2020-09-01",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "type": "Microsoft.NetApp/netAppAccounts/capacityPools",
      "apiVersion": "2020-09-01",
      "name": "[variables('capacityPoolName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('netAppAccountId')]"
      ],
      "properties": {
        "serviceLevel": "[parameters('netAppServiceLevel')]",
        "size": 4398046511104
      }
    },
    {
      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
      "apiVersion": "2020-09-01",
      "name": "[variables('volumeName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('capacityPoolId')]",
        "[variables('virtualNetworkId')]"
      ],
      "properties": {
        "serviceLevel": "[parameters('netAppServiceLevel')]",
        "creationToken": "[variables('netAppVolumeName')]",
        "usageThreshold": 107374182400,
        "exportPolicy": {
          "rules": [
            {
              "ruleIndex": 1,
              "unixReadOnly": false,
              "unixReadWrite": true,
              "cifs": false,
              "nfsv3": false,
              "nfsv41": true,
              "allowedClients": "[parameters('virtualNetworkAddressPrefixes')]"
            }
          ]
        },
        "protocolTypes": [
          "NFSv4.1"
        ],
        "subnetId": "[variables('netAppFileSubnetId')]",
        "snapshotDirectoryVisible": false
      }
    },
    {
      "comments": "User-Defined Managed Identity defined for the AKS cluster. Used to access the Virtual Network and other resources.",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('aksClusterUserDefinedManagedIdentityName')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
    },
    {
      "comments": "Grant the AKS cluster with ingress controller pod managed identity with contributor role permissions",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('aksContributorRoleAssignmentName')]",
      "dependsOn": [
        "[variables('aksClusterUserDefinedManagedIdentityId')]",
        "[variables('virtualNetworkId')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleId')]",
        "description": "Assign the cluster user-defined managed identity contributor role on the resource group.",
        "principalId": "[reference(variables('aksClusterUserDefinedManagedIdentityName')).principalId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2021-03-01",
      "name": "[parameters('aksClusterName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[variables('aksClusterUserDefinedManagedIdentityId')]": {}
        }
      },
      "dependsOn": [
        "[variables('virtualNetworkId')]",
        "[variables('aksContributorRoleAssignmentId')]",
        "[variables('netAppVolumeId')]"
      ],
      "properties": {
        "kubernetesVersion": "[parameters('aksClusterKubernetesVersion')]",
        "dnsPrefix": "[parameters('aksClusterDnsPrefix')]",
        "sku": {
          "name": "Basic",
          "tier": "[parameters('aksClusterSkuTier')]"
        },
        "agentPoolProfiles": [
          {
            "name": "agentpool1",
            "count": "[parameters('aksSystemNodePoolAgentCount')]",
            "vmSize": "[parameters('aksNodePoolVmSize')]",
            "osDiskSizeGB": 100,
            "vnetSubnetID": "[variables('aksSubnetId')]",
            "maxPods": 50,
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "enableAutoScaling": true,
            "maxCount": 10,
            "minCount": 1,
            "scaleSetPriority": "Regular",
            "scaleSetEvictionPolicy": "Delete",
            "mode": "System",
            "type": "VirtualMachineScaleSets",
            "availabilityZones": "[parameters('aksClusterAvailabilityZones')]",
            "nodeLabels": {},
            "nodeTaints": []
          }
        ],
        "enableRBAC": true,
        "addonProfiles": {
          "ingressApplicationGateway": {
            "enabled": true,
            "config": {
              "subnetId": "[variables('applicationGatewaySubnetId')]"
            }
          }
        },
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "podCidr": "[parameters('aksClusterPodCidr')]",
          "serviceCidr": "[parameters('aksClusterServiceCidr')]",
          "dnsServiceIP": "[parameters('aksClusterDnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('aksClusterDockerBridgeCidr')]",
          "outboundType": "loadBalancer",
          "loadBalancerSku": "Standard",
          "loadBalancerProfile": "[json('null')]"
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": "[parameters('aksClusterEnablePrivateCluster')]"
        }
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters/agentPools",
      "apiVersion": "2021-03-01",
      "name": "[concat(parameters('aksClusterName'), '/userpool1')]",
      "dependsOn": [
        "[variables('aksClusterId')]"
      ],
      "properties": {
        "name": "userpool1",
        "count": "[parameters('aksUserNodePoolAgentCount')]",
        "vmSize": "[parameters('aksNodePoolVmSize')]",
        "osDiskSizeGB": 100,
        "vnetSubnetID": "[variables('aksSubnetId')]",
        "maxPods": 50,
        "osType": "Linux",
        "storageProfile": "ManagedDisks",
        "enableAutoScaling": true,
        "maxCount": 10,
        "minCount": 1,
        "scaleSetPriority": "Regular",
        "scaleSetEvictionPolicy": "Delete",
        "mode": "User",
        "type": "VirtualMachineScaleSets",
        "availabilityZones": "[parameters('aksClusterAvailabilityZones')]",
        "nodeLabels": {},
        "nodeTaints": [],
        "orchestratorVersion": "[parameters('aksClusterKubernetesVersion')]"
      }
    }
  ],
  "outputs": {
    "virtualMachinePublicIpAddress": {
      "type": "string",
      "value": "[reference(variables('virtualMachinePublicIpAddressName')).ipAddress]"
    },
    "netAppFileIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.NetApp/netAppAccounts/capacityPools/volumes/', variables('netAppAccountName'), variables('netAppPoolName'), variables('netAppVolumeName'))).mountTargets[0].ipAddress]"
    },
    "aksClusterName": {
      "type": "string",
      "value": "[parameters('aksClusterName')]"
    }
  }
}
